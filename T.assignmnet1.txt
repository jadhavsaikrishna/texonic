(1)
#include <bits/stdc++.h>
using namespace std;

const int val[13] = {1000,900,500,400,100,90,50,40,10,9,5,4,1};
const string rom[13] = {"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};

string intToRoman(int N) {
    string ans = "";
    for (int i = 0; N; i++)
        while (N >= val[i]) ans += rom[i], N -= val[i];
    return ans;
}

int32_t main() {
    
    int n;cin>>n;
    cout<<intToRoman(n)<<endl;
    return 0;        
}

*/
(2)


#include <bits/stdc++.h>
using namespace std;

int maxProfit(int price[], int n)
{
    int* profit = new int[n];
    for (int i = 0; i < n; i++)
        profit[i] = 0;

    int max_price = price[n - 1];
    for (int i = n - 2; i >= 0; i--) {
    
        if (price[i] > max_price)
            max_price = price[i];

        profit[i]
            = max(profit[i + 1], max_price - price[i]);
    }

    int min_price = price[0];
    for (int i = 1; i < n; i++) {
        if (price[i] < min_price)
            min_price = price[i];

        profit[i] = max(profit[i - 1],
                        profit[i] + (price[i] - min_price));
    }
    int result = profit[n - 1];
    return result;
}

int main()
{
    int n;
    cin>>n;
    int price[n];
    for(int i=0;i<n;i++) cin>>price[i];
    cout <<maxProfit(price, n)<<endl;
    return 0;
}